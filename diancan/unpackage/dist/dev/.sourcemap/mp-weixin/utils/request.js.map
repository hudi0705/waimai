{"version":3,"file":"request.js","sources":["utils/request.js"],"sourcesContent":["// 基础配置\r\nconst config = {\r\n  baseUrl: 'http://localhost/api',\r\n  timeout: 10000\r\n}\r\n\r\n// 请求工具函数\r\nconst request = (path, data = {}, method = 'GET') => {\r\n  return new Promise((resolve, reject) => {\r\n    // 获取存储的 PHPSESSID\r\n    const phpsessid = uni.getStorageSync('PHPSESSID')\r\n\r\n    uni.request({\r\n      url: config.baseUrl + path,\r\n      method: method,\r\n      data: data,\r\n      header: {\r\n        'Cookie': phpsessid ? 'PHPSESSID=' + phpsessid : ''\r\n      },\r\n      timeout: config.timeout,\r\n      success: (res) => {\r\n        // 处理 Set-Cookie\r\n        if (res.header['Set-Cookie']) {\r\n          const match = res.header['Set-Cookie'].match(/PHPSESSID=([^;]+)/)\r\n          if (match) {\r\n            const newPhpsessid = match[1]\r\n            uni.setStorageSync('PHPSESSID', newPhpsessid)\r\n          }\r\n        }\r\n\r\n        // 处理响应\r\n        if (res.statusCode === 200) {\r\n          if (res.data.code === 0) {\r\n            handleError(res.data.msg || '请求失败', reject)\r\n            return\r\n          }\r\n          resolve(res.data)\r\n        } else {\r\n          handleError('服务器异常', reject)\r\n        }\r\n      },\r\n      fail: (err) => {\r\n        console.error('请求失败：', err)\r\n        handleError('网络异常，请检查网络连接', reject)\r\n      }\r\n    })\r\n  })\r\n}\r\n\r\n// 错误处理函数\r\nconst handleError = (title, reject) => {\r\n  uni.hideLoading()\r\n  uni.showModal({\r\n    title: title,\r\n    confirmText: '重试',\r\n    success: (res) => {\r\n      if (res.confirm) {\r\n        reject(new Error(title))\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n// API 接口封装\r\nconst api = {\r\n  // 用户相关接口\r\n  user: {\r\n    // 检查登录状态\r\n    checkLogin: () => request('/user/checkLogin'),\r\n    // 微信登录\r\n    login: (jsCode) => request('/user/login', {\r\n      js_code: jsCode\r\n    })\r\n  },\r\n  // 食品相关接口\r\n  food: {\r\n    // 获取食品列表\r\n    getList: () => request('/food/record')\r\n  }\r\n}\r\n\r\nexport default api"],"names":["uni"],"mappings":";;AACA,MAAM,SAAS;AAAA,EACb,SAAS;AAAA,EACT,SAAS;AACX;AAGA,MAAM,UAAU,CAAC,MAAM,OAAO,CAAA,GAAI,SAAS,UAAU;AACnD,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AAEtC,UAAM,YAAYA,cAAAA,MAAI,eAAe,WAAW;AAEhDA,kBAAAA,MAAI,QAAQ;AAAA,MACV,KAAK,OAAO,UAAU;AAAA,MACtB;AAAA,MACA;AAAA,MACA,QAAQ;AAAA,QACN,UAAU,YAAY,eAAe,YAAY;AAAA,MAClD;AAAA,MACD,SAAS,OAAO;AAAA,MAChB,SAAS,CAAC,QAAQ;AAEhB,YAAI,IAAI,OAAO,YAAY,GAAG;AAC5B,gBAAM,QAAQ,IAAI,OAAO,YAAY,EAAE,MAAM,mBAAmB;AAChE,cAAI,OAAO;AACT,kBAAM,eAAe,MAAM,CAAC;AAC5BA,gCAAI,eAAe,aAAa,YAAY;AAAA,UAC7C;AAAA,QACF;AAGD,YAAI,IAAI,eAAe,KAAK;AAC1B,cAAI,IAAI,KAAK,SAAS,GAAG;AACvB,wBAAY,IAAI,KAAK,OAAO,QAAQ,MAAM;AAC1C;AAAA,UACD;AACD,kBAAQ,IAAI,IAAI;AAAA,QAC1B,OAAe;AACL,sBAAY,SAAS,MAAM;AAAA,QAC5B;AAAA,MACF;AAAA,MACD,MAAM,CAAC,QAAQ;AACbA,sBAAAA,+CAAc,SAAS,GAAG;AAC1B,oBAAY,gBAAgB,MAAM;AAAA,MACnC;AAAA,IACP,CAAK;AAAA,EACL,CAAG;AACH;AAGA,MAAM,cAAc,CAAC,OAAO,WAAW;AACrCA,gBAAAA,MAAI,YAAa;AACjBA,gBAAAA,MAAI,UAAU;AAAA,IACZ;AAAA,IACA,aAAa;AAAA,IACb,SAAS,CAAC,QAAQ;AAChB,UAAI,IAAI,SAAS;AACf,eAAO,IAAI,MAAM,KAAK,CAAC;AAAA,MACxB;AAAA,IACF;AAAA,EACL,CAAG;AACH;AAGK,MAAC,MAAM;AAAA;AAAA,EAEV,MAAM;AAAA;AAAA,IAEJ,YAAY,MAAM,QAAQ,kBAAkB;AAAA;AAAA,IAE5C,OAAO,CAAC,WAAW,QAAQ,eAAe;AAAA,MACxC,SAAS;AAAA,IACf,CAAK;AAAA,EACF;AAAA;AAAA,EAED,MAAM;AAAA;AAAA,IAEJ,SAAS,MAAM,QAAQ,cAAc;AAAA,EACtC;AACH;;"}